{
  "hash": "2d635fffbfd8b753c8fc3e89586a150f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Heatwave exposure statistics\nformat:\n  360-analysis-html: default\nauthor: James Goldie\ndate: last-modified\ncode-fold: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(countrycode)\nlibrary(docxtractr)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /workspaces/report-heatstress-asia\n```\n\n\n:::\n:::\n\n\n\n\n# Heatwave days\n\nThe authors have provided global, continent, region and country estimates backing Figures 1 and 2 as an `.RData` file.\n\nWe'll combine these into one spreadsheet and export as a CSV. We'll also add ISO2 codes so that we can attach flags in the country profiles.\n\nWe'll retain the continent and region estimates by leaving `country` and `region` missing, and put the global estimate under the `Global` continent.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere(\"data\", \"zhao-etal-2024\", \"raw\", \"hwdays.RData\") |> load()\n\n# bind the data together, add iso2 codes, and sort\n# (write out NAs as blank to avoid iso2 conflict)\nglobal |>\n  rename(continent = location) |>\n  bind_rows(conti, reg, countr) |>\n  as_tibble() |>\n  mutate(\n    location_type = case_when(\n      !is.na(country)   ~ \"country\",\n      !is.na(region)    ~ \"region\",\n      !is.na(continent) ~ \"continent\",\n      TRUE              ~ \"unknown\"\n    ),\n    iso2 = countrycode(country, \"country.name\", \"iso2c\")) |>\n  select(location_type, continent, region, iso2, country, everything()) |>\n  arrange(continent, region, iso2) |>\n  write_csv(here(\"data\", \"zhao-etal-2024\", \"heatwave-days.csv\"),\n    na = \"\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `iso2 = countrycode(country, \"country.name\", \"iso2c\")`.\nCaused by warning:\n! Some values were not matched unambiguously: ESH, VAT\n```\n\n\n:::\n:::\n\n\n\n\n# Mortality\n\nMortality estimates are provided in the supplementary materials as tables in Word documents. We can use `{docextractr}` to get them out.\n\nThe tables aren't too bad structurally, but regions (with continents) and countries (within regions) have been distinguished using two and four leading spaces, respectively. We'll pull those out manually.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_regional_supp_table <- function(path) {\n  path |>\n    read_docx() |>\n    docx_extract_tbl(1, trim = FALSE) |>\n    rename(location = `X.`) |>\n    # pull regions/countries out based on preceding whitespace\n    mutate(\n      country = if_else(\n        str_starts(location, \"        \\\\S\"),\n        str_trim(location),\n        NA_character_),\n      region = if_else(\n        str_starts(location, \"    \\\\S\"),\n        str_trim(location),\n        NA_character_),\n      continent = if_else(\n        str_starts(location, \"\\\\S\"),\n        str_trim(location),\n        NA_character_)) |>\n    fill(continent) |>\n    group_by(continent) |>\n    fill(region) |>\n    # add iso2 code\n    mutate(iso2 = countrycode(country, \"country.name\", \"iso2c\")) |>\n    select(continent, region, iso2, country, everything()) |>\n    select(-location) |>\n    # split confidence intervals out\n    pivot_longer(\n      -c(continent, region, iso2, country),\n      names_to = \"statistic\",\n      values_to = \"value\") |>\n    separate_wider_delim(value,\n      delim = regex(\"[^\\\\d\\\\.\\\\-]+\"),\n      names = c(\"central\", \"lower\", \"upper\", NA),\n      too_few = \"align_start\") |>\n    # tidy up categories and value types\n    mutate(\n      location_type = case_when(\n        !is.na(country)   ~ \"country\",\n        !is.na(region)    ~ \"region\",\n        !is.na(continent) ~ \"continent\",\n        TRUE              ~ \"unknown\"\n      ),\n      across(c(\"central\", \"upper\", \"lower\"), as.numeric),\n      statistic = str_replace_all(statistic, c(\n        \"(?<=\\\\d{4})\\\\.(?=\\\\d{4})\" = \"-\",\n        \"\\\\.\" = \" \",\n        \"^X\\\\s?\" = \"\"\n        )))\n}\n```\n:::\n\n\n\n\nLet's apply that function to each of the supplementary tables of interest:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# choosing to process only the excess deaths and excess death rates (per 10M)\nregion_table_index <- tribble(\n  ~ id, ~ measure,       ~ population,\n  15,   \"Excess deaths\", \"Country-specific age standardisation\",\n  16,   \"Excess deaths\", \"WHO standard population\",\n  # 17,   \"Excess death ratio\", \"Country-specific age standardisation\",\n  # 18,   \"Excess death ratio\", \"WHO standard population\",\n  19,   \"Excess deaths per 10M residents\", \"Country-specific age standardisation\",\n  20,   \"Excess deaths per 10M residents\", \"WHO standard population\")\n\n# tidy each of the specified tables up\nregion_table_index |>\n  mutate(\n    path = here(\"data\", \"zhao-etal-2024\", \"raw\",\n      paste0(\"pmed.1004364.s0\", id, \".docx\")),\n    table = map(path, tidy_regional_supp_table)) ->\nregional_data_nested\n\n# unnest and write out to disk (make NAs blank to avoid iso2 conflict)\nregional_data_nested |>\n  unnest(table) |>\n  select(-path) |>\n  select(measure, population, location_type, everything()) |>\n  mutate(\n    statistic = case_match(statistic,\n      \"Change per decade a\" ~ \"Pct change per decade\",\n      .default = statistic)) |>\n  write_csv(\n    here(\"data\", \"zhao-etal-2024\", \"heatwave-mortality-stats-country.csv\"),\n    na = \"\")\n```\n:::\n\n\n\n\n## Income groups\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincome_table_index <- tribble(\n  ~ id, ~ measure, ~ population,\n  21,   \"Excess deaths\", \"Country-specific age standardisation\",\n  22,   \"Excess deaths\", \"WHO standard population\",\n  23,   \"Excess deaths per 10M residents\", \"Country-specific age standardisation\",\n  24,   \"Excess deaths per 10M residents\", \"WHO standard population\"\n  # 25,   \"Excess death ratio\", \"Country-specific age standardisation\",\n  # 26,   \"Excess death ratio\", \"WHO standard population\"\n)\n```\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}